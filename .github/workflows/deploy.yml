name: Deploy to ECS

on:
  release:
    types:
        - published  # リリースが公開されたときにデプロイ

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1) コードをチェックアウト
      - name: Check out code
        uses: actions/checkout@v4

      # 2) Node.js のバージョン設定 & npm install (必要に応じて)
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22

      - name: Install dependencies
        run: npm install

      # 3) AWS CLI & Docker login
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} \
          | docker login --username AWS --password-stdin "${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com"

      # 4) Docker ビルド & プッシュ
      - name: Build Docker image
        run: |
          docker build -t "${{ secrets.ECR_REPOSITORY_NAME }}" .

      - name: Tag Docker image
        run: |
          docker tag "${{ secrets.ECR_REPOSITORY_NAME }}:latest" \
          "${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY_NAME }}:latest"

      - name: Push to ECR
        run: |
          docker push "${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY_NAME }}:latest"

      # 5) ECS サービス更新
      - name: Update ECS service
        run: |
          aws ecs update-service \
            --cluster "${{ secrets.ECS_CLUSTER_NAME }}" \
            --service "${{ secrets.ECS_SERVICE_NAME }}" \
            --force-new-deployment
